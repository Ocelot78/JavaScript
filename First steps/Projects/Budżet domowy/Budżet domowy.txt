**Pomysł na aplikację użytkową: "Kalkulator Budżetu Domowego"**

### Opis aplikacji:
Aplikacja pozwala użytkownikowi zarządzać swoim budżetem domowym. Użytkownik może dodawać swoje przychody i wydatki, a aplikacja wyświetla podsumowanie oraz wykresy pokazujące, jak pieniądze są rozdysponowane. 

---

### Funkcjonalności:
1. **Dodawanie przychodów i wydatków**:
   - Użytkownik wprowadza kwotę, kategorię (np. "żywność", "transport", "rozrywka"), oraz opcjonalnie opis.
2. **Podsumowanie budżetu**:
   - Wyświetlenie aktualnego stanu budżetu (ile zostało, ile wydano, ile zarobiono).
3. **Analiza danych**:
   - Wykresy (np. kołowy dla wydatków, słupkowy dla przychodów w czasie).
4. **Historia transakcji**:
   - Lista zadań z możliwością filtrowania (np. tylko wydatki lub przychody).
5. **Tryb responsywny**:
   - Na telefonach: uproszczony widok, np. tylko ostatnie transakcje i suma.
   - Na komputerach: pełny widok z wykresami i historią.
6. **Waluta**:
   - Możliwość zmiany waluty (np. złote, euro, dolary).

---

### Technologie:
- **HTML**: Struktura aplikacji.
- **CSS**: Stylizacja z responsywnością (Media Queries, Flexbox, Grid Layout).
- **JavaScript**: Interaktywność i logika aplikacji.
- **Local Storage**: Przechowywanie danych użytkownika (np. zapisane wydatki/przychody).
- **Biblioteka wykresów**: [Chart.js](https://www.chartjs.org/) do wizualizacji danych.

---

### Układ aplikacji:
1. **Główna sekcja**:
   - Pole do dodawania nowej transakcji (formularz z polami: kwota, typ [przychód/wydatek], kategoria, opis).
2. **Podsumowanie**:
   - Wyświetlanie sumarycznego bilansu.
   - Pokazanie wydanych i zarobionych środków w podziale na kategorie.
3. **Historia transakcji**:
   - Lista w formie tabeli (np. "20 zł, kategoria: transport, opis: bilet miesięczny").
4. **Wykresy**:
   - Kołowy dla proporcji wydatków.
   - Słupkowy dla przychodów w czasie.

---

### Kluczowe wyzwania:
1. **Responsywność**:
   - Na telefonach: kompaktowy widok (np. tylko podsumowanie i szybki dostęp do historii transakcji).
   - Na komputerach: pełny widok z wykresami i dodatkowymi informacjami.
2. **Obsługa danych w Local Storage**:
   - Zapisywanie transakcji w pamięci przeglądarki.
3. **Interaktywność**:
   - Dynamiczne przeliczanie sum i aktualizacja wykresów po dodaniu nowej transakcji.

---

### Rozwój projektu:
1. **Wersja podstawowa**:
   - Dodawanie transakcji i wyświetlanie listy.
   - Prosty widok podsumowania (np. tylko tekstowy).
2. **Rozszerzenie funkcjonalności**:
   - Dodanie wykresów.
   - Filtrowanie i sortowanie transakcji.
3. **Dalsze ulepszenia**:
   - Eksport danych (np. jako plik CSV).
   - Synchronizacja danych w chmurze.

---